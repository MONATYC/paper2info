import os
import streamlit as st
import google.generativeai as genai
import pdfplumber
from datetime import datetime
from dotenv import load_dotenv


def load_config():
    # Cargar las variables de entorno
    load_dotenv()
    config = {
        "GOOGLE_API_KEY": os.getenv("GOOGLE_API_KEY"),
        "GEMINI_MODEL_NAME": os.getenv("GEMINI_MODEL_NAME", "gemini-1.5-flash-002"),
        "MAX_FILE_SIZE_MB": min(
            int(os.getenv("MAX_FILE_SIZE_MB", 10)), 50
        ),  # M√°ximo 50 MB
        "MAX_INPUT_LENGTH": int(os.getenv("MAX_INPUT_LENGTH", 6000)),
        "ACCEPTED_MODELS": ["gemini-1.5-flash-002", "gemini-1.5-pro-002"],
    }
    return config


def extraer_texto_de_pdf(archivo_pdf):
    texto = ""
    try:
        with pdfplumber.open(archivo_pdf) as pdf:
            for pagina in pdf.pages:
                texto_pagina = pagina.extract_text() or ""
                texto += texto_pagina
        if not texto.strip():
            st.warning(
                "No se pudo extraer texto del PDF. Por favor, verifica que el archivo sea legible."
            )
            return None
    except Exception as e:
        st.error(f"Error al procesar el PDF: {e}")
        return None
    return texto


def extraer_datos_articulo(texto_pdf, modelo_nombre, max_input_length):
    # Truncar el texto si excede la longitud m√°xima permitida
    if len(texto_pdf) > max_input_length:
        st.warning(
            "El texto del PDF es demasiado largo y ser√° truncado para ajustarse al l√≠mite permitido."
        )
        texto_pdf = texto_pdf[:max_input_length]

    # Construir el prompt (no modificar)
    prompt = f"""
Eres una herramienta de inteligencia artificial de extracci√≥n avanzada de datos de art√≠culos cient√≠ficos necesito realizar distintos post en redes sociales sobre el an√°lisis de distintos art√≠culos cient√≠ficos y necesito que me ayude se extraer la informaci√≥n necesaria para que despu√©s yo pueda realizar esos post necesito que me ayudes en la extracci√≥n de los datos yo te facilitar√° el art√≠culo y t√∫ en base a la d√≠a siguiente extraer√°s la informaci√≥n de manera estructurada punto por punto y contestando a todas las preguntas que te propongo:

Para crear un post eficaz basado en un art√≠culo cient√≠fico, los detalles que necesito extraer de dicho art√≠culo son los siguientes:

### 0. **En qu√© revista y en qu√© fecha se ha publicado? Quienes son los investigadores, de que universidad?**

### 1. **Tema central o enfoque del estudio**
   - **¬øDe qu√© trata el estudio?**: Una frase o dos que expliquen el objetivo principal. Ejemplo: *"Este estudio analiza los efectos de la introducci√≥n de una nueva dieta en el bienestar de los primates en cautiverio."*
   - Es √∫til saber el *problema o la pregunta de investigaci√≥n* que el estudio aborda.

### 2. **Especies o animales estudiados**
   - **¬øQu√© animales est√°n involucrados en el estudio?**: Enumera las especies espec√≠ficas que fueron estudiadas. Ejemplo: *"Chimpanc√©s y gorilas de monta√±a en zool√≥gicos europeos."*
   - Si es un estudio comparativo entre especies, resalta eso.

### 3. **M√©todo o metodolog√≠a utilizada**
   - **¬øC√≥mo se realiz√≥ el estudio?**: Es clave describir las t√©cnicas, herramientas o enfoques aplicados en t√©rminos claros. Ejemplo: *"Se utiliz√≥ un m√©todo de enriquecimiento ambiental basado en juegos interactivos que promueven la actividad f√≠sica."*
   - **¬øQu√© tipo de experimento o prueba?**: Observaci√≥n directa, an√°lisis de muestras, encuestas, tecnolog√≠a innovadora (ej. c√°maras t√©rmicas, l√°ser tridimensional, etc.).

### 4. **Resultados principales**
   - **¬øQu√© se encontr√≥?**: Los hallazgos m√°s importantes del estudio, idealmente en t√©rminos cuantitativos o cualitativos claros. Ejemplo: *"Los primates mostraron un 30% m√°s de actividad f√≠sica con la nueva dieta."*
   - Si hubo efectos sorprendentes o contrarios a las expectativas, esos detalles son valiosos.
   - **Comparaciones o diferencias clave**: Si el estudio compar√≥ distintas condiciones, se debe mencionar qu√© opci√≥n fue m√°s efectiva o favorable.

### 5. **Importancia o impacto**
   - **¬øPor qu√© es relevante este estudio?**: Describe c√≥mo estos hallazgos afectan el bienestar de los animales, las pr√°cticas de manejo en zool√≥gicos o avances cient√≠ficos. Ejemplo: *"Este estudio sugiere que los cambios en la dieta pueden reducir el estr√©s en primates, lo que mejorar√≠a su calidad de vida en cautiverio."*
   - **Aplicaciones pr√°cticas**: ¬øPuede ayudar a otras instituciones zool√≥gicas? ¬øEs relevante para la conservaci√≥n, salud animal, o manejo diario?

### 6. **Conclusiones y recomendaciones**
   - **¬øQu√© conclusiones sacan los autores?**: Un resumen de las conclusiones clave.
   - **¬øHay alguna recomendaci√≥n espec√≠fica para la comunidad zool√≥gica?**: Por ejemplo, implementar nuevas tecnolog√≠as, ajustar pr√°cticas de alimentaci√≥n, etc.

### 7. **Detalles adicionales (si es relevante)**
   - **Limitaciones del estudio**: Si el art√≠culo menciona alg√∫n aspecto que los autores consideran una limitaci√≥n (muestra peque√±a, corto plazo, etc.), a veces es importante mencionarlo.
   - **Futuras investigaciones**: Si el art√≠culo sugiere nuevas l√≠neas de investigaci√≥n, esto tambi√©n puede ser un punto interesante a destacar.

### 8.**Crea en formato APA7 la referencia correcta para este articulo y enlaza el DOI**
---

Si me proporcionas estos puntos en resumen, puedo generar un post atractivo que resalte la informaci√≥n m√°s valiosa del paper. En resumen, lo m√°s importante es el tema del estudio, los animales, los m√©todos, los resultados clave y su relevancia para la comunidad.

    Contenido del art√≠culo:
    {texto_pdf}
    """

    with st.spinner("Extrayendo datos del art√≠culo cient√≠fico..."):
        try:
            modelo = genai.GenerativeModel(modelo_nombre)
            respuesta = modelo.generate_content(
                prompt, generation_config=genai.types.GenerationConfig(temperature=0)
            )
            return respuesta.text.strip()
        except Exception as e:
            st.error(f"Error al generar la respuesta con el modelo: {e}")
            return None


def mostrar_resultados(texto_extraido):
    if texto_extraido:
        st.header("Datos Extra√≠dos del Art√≠culo Cient√≠fico")
        st.text_area("Contenido Extra√≠do", texto_extraido, height=400, disabled=True)

        # Bot√≥n de descarga para el archivo Markdown
        md_filename = f"articulo_extraido_{datetime.now().strftime('%Y%m%d_%H%M%S')}.md"
        st.download_button(
            label="Descargar como Markdown",
            data=texto_extraido,
            file_name=md_filename,
            mime="text/markdown",
        )

        st.info("Puedes seleccionar y copiar el texto del √°rea de texto si lo deseas.")
    else:
        st.warning("No se pudieron extraer datos del art√≠culo.")


def main():
    config = load_config()

    # Verificar la API key
    if not config["GOOGLE_API_KEY"]:
        st.error(
            "No se encontr√≥ la GOOGLE_API_KEY en el archivo .env. Por favor, aseg√∫rate de definir esta clave en el archivo .env siguiendo las instrucciones proporcionadas."
        )
        st.stop()

    # Configurar la API de GenAI
    genai.configure(api_key=config["GOOGLE_API_KEY"])

    st.set_page_config(
        page_title="Extractor de Art√≠culos Cient√≠ficos", page_icon="üìÑ", layout="wide"
    )

    st.title("üìÑ Extractor de Datos de Art√≠culos Cient√≠ficos")

    st.markdown("""
    Esta aplicaci√≥n te permite extraer informaci√≥n clave de art√≠culos cient√≠ficos en formato PDF usando la API de Google Gemini.

    ### C√≥mo usar:
    1. Sube tu archivo PDF.
    2. Espera mientras procesamos y extraemos la informaci√≥n clave del art√≠culo.
    3. Explora los resultados extra√≠dos y utiliza los botones para copiar o descargar la informaci√≥n.
    """)

    archivo_pdf = st.file_uploader("Selecciona tu archivo PDF", type="pdf")

    if archivo_pdf is not None:
        if archivo_pdf.size > config["MAX_FILE_SIZE_MB"] * 1024 * 1024:
            st.error(
                f"El archivo es demasiado grande. Por favor, sube un archivo de menos de {config['MAX_FILE_SIZE_MB']} MB."
            )
            return

        texto_pdf = extraer_texto_de_pdf(archivo_pdf)

        if texto_pdf:
            modelo_nombre = config["GEMINI_MODEL_NAME"]
            if modelo_nombre not in config["ACCEPTED_MODELS"]:
                st.error(
                    f"El modelo especificado ({modelo_nombre}) no es v√°lido. Por favor, verifica la configuraci√≥n."
                )
                st.stop()

            texto_extraido = extraer_datos_articulo(
                texto_pdf, modelo_nombre, config["MAX_INPUT_LENGTH"]
            )

            if texto_extraido:
                st.success("¬°Datos extra√≠dos con √©xito!")
                mostrar_resultados(texto_extraido)
            else:
                st.error("No se pudieron extraer datos del art√≠culo.")
        else:
            st.error(
                "No se pudo extraer texto del PDF. Por favor, verifica que el archivo sea legible."
            )


if __name__ == "__main__":
    main()
